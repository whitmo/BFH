--
-- Set Up Keyspace
--

-- note: drop keyspaces only if they exist already

--drop keyspace CNS;
--drop keyspace CQS;
--drop keyspace CMB;

create keyspace CNS;
create keyspace CQS;
create keyspace CMB;

-- note: for a replicated environment make sure to configure the desired placement strategy and strategy options 

--
-- CNS Column Families
--

use CNS;

--
-- CNSTopics Column Family
-- 
-- stores meta data for a topic
--

create column family CNSTopics
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'userId',
    validation_class : UTF8Type},
    {column_name : 'displayName',
    validation_class : UTF8Type},
    {column_name : 'name',
    validation_class : UTF8Type}];

--
-- CNSTopicsByUserId Column Family
-- 
-- index topics by user id
--

create column family CNSTopicsByUserId
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CNSTopicSubscriptions Column Family
-- 
-- stores meta data for topic subscriptions
--

create column family CNSTopicSubscriptions
  with column_type = 'Super'
  with caching = 'all'
  and comparator = 'CompositeType(UTF8Type, UTF8Type)'
  and subcomparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'endPoint',
    validation_class : UTF8Type},
    {column_name : 'userId',
    validation_class : UTF8Type},
    {column_name : 'confirmDate',
    validation_class : UTF8Type},
    {column_name : 'subArn',
    validation_class : UTF8Type},
    {column_name : 'requestDate',
    validation_class : UTF8Type},
    {column_name : 'protocol',
    validation_class : UTF8Type},
    {column_name : 'isConfirmed',
    validation_class : UTF8Type},
    {column_name : 'token',
    validation_class : UTF8Type},
    {column_name : 'authenticateOnSubscribe',
    validation_class : UTF8Type}]
  and compression_options = {'chunk_length_kb' : '64', 'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};

--
-- CNSTopicSubscriptionsIndex Column Family
-- 
-- index subscriptions by topic arn
--

create column family CNSTopicSubscriptionsIndex
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CNSTopicSubscriptionsUserIndex Column Family
-- 
-- index subscriptions by user
--

create column family CNSTopicSubscriptionsUserIndex
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CNSTopicSubscriptionsTokenIndex Column Family
-- 
-- index subscriptions by token
--

create column family CNSTopicSubscriptionsTokenIndex
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CNSTopicAttributes Column Family
-- 
-- topic attributes
--
	
create column family CNSTopicAttributes
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'effectiveDeliveryPolicy',
    validation_class : UTF8Type},
    {column_name : 'userId',
    validation_class : UTF8Type},
    {column_name : 'policy',
    validation_class : UTF8Type}];
    
--
-- CNSSubscriptionAttributes Column Family
-- 
-- subscription attributes
--
	
create column family CNSSubscriptionAttributes
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'effectiveDeliveryPolicy',
    validation_class : UTF8Type},
    {column_name : 'userId',
    validation_class : UTF8Type},
    {column_name : 'confirmationWasAuthenticated',
    validation_class : UTF8Type},
    {column_name : 'deliveryPolicy',
    validation_class : UTF8Type},
    {column_name : 'topicArn',
    validation_class : UTF8Type}];
    
--
-- CNSTopicStats Column Family
-- 
-- 
--

create column family CNSTopicStats 
  with default_validation_class=CounterColumnType 
  with caching = 'all'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and key_validation_class=UTF8Type
  and comparator=UTF8Type; 

--
-- CNSWorkers Column Family
-- 
-- heart beat for cns workers
--

create column family CNSWorkers
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CNSAPIServers Column Family
-- 
-- heart beat for cns api servers
--

create column family CNSAPIServers  
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CQS Column Families
--

use CQS;

--
-- CQSQueues Column Family
--
-- stores CQS queue meta data
--

create column family CQSQueues
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'arn',
    validation_class : UTF8Type,
    index_name : 'CQSQueuesArnIdx',
    index_type : 0},
    {column_name : 'createdTime',
    validation_class : UTF8Type},
    {column_name : 'delaySeconds',
    validation_class : UTF8Type},
    {column_name : 'maxMsgSize',
    validation_class : UTF8Type},
    {column_name : 'msgRetentionPeriod',
    validation_class : UTF8Type},
    {column_name : 'name',
    validation_class : UTF8Type},
    {column_name : 'ownerUserId',
    validation_class : UTF8Type,
    index_name : 'CQSQueuesOwnerUserIdIdx',
    index_type : 0},
    {column_name : 'policy',
    validation_class : UTF8Type},
    {column_name : 'region',
    validation_class : UTF8Type},
    {column_name : 'visibilityTO',
    validation_class : UTF8Type}];

--
-- CQSQueuesByUserId Column Family
-- 
-- index queues by user id
--

create column family CQSQueuesByUserId
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- CQSPartitionedQueueMessages Column Family
--
-- queues messages
--
    
 create column family CQSPartitionedQueueMessages
  with column_type = 'Super'
  with caching = 'keys_only'
  and comparator = 'CompositeType(LongType, LongType)'
  and subcomparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and gc_grace = 5
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'ApproximateFirstReceiveTimestamp',
    validation_class : UTF8Type},
    {column_name : 'ApproximateReceiveCount',
    validation_class : UTF8Type},
    {column_name : 'Body',
    validation_class : UTF8Type},
    {column_name : 'MD5OfBody',
    validation_class : UTF8Type},
    {column_name : 'MessageId',
    validation_class : UTF8Type},
    {column_name : 'SenderId',
    validation_class : UTF8Type},
    {column_name : 'SentTimestamp',
    validation_class : UTF8Type}]
  and compression_options = {'chunk_length_kb' : '64', 'sstable_compression' : 'org.apache.cassandra.io.compress.SnappyCompressor'};
    
--
-- CQSAPIServers Column Family
-- 
-- heart beat for cqs api servers
--

create column family CQSAPIServers
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy';

--
-- Generic Column Families
--

use CMB;

--
-- Users Column Family
--
-- stores user meta data
--

create column family Users
  with column_type = 'Standard'
  with caching = 'all'
  and comparator = 'UTF8Type'
  and default_validation_class = 'UTF8Type'
  and key_validation_class = 'UTF8Type'
  and read_repair_chance = 0
  and dclocal_read_repair_chance = 0.05
  and min_compaction_threshold = 4
  and max_compaction_threshold = 32
  and replicate_on_write = true
  and compaction_strategy = 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy'
  and column_metadata = [
    {column_name : 'accessKey',
    validation_class : UTF8Type,
    index_name : 'usersAccessKeyIdx',
    index_type : 0},
    {column_name : 'accessSecret',
    validation_class : UTF8Type},
    {column_name : 'hashPassword',
    validation_class : UTF8Type},
    {column_name : 'userId',
    validation_class : UTF8Type,
    index_name : 'usersUserIdIdx',
    index_type : 0},
    {column_name : 'isAdmin',
    validation_class : UTF8Type}];
   
